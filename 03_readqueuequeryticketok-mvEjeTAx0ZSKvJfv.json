{"createdAt":"2025-09-26T18:09:28.275Z","updatedAt":"2025-10-29T16:02:00.580Z","id":"mvEjeTAx0ZSKvJfv","name":"03_ReadQueueQueryTicketOK","active":false,"isArchived":false,"nodes":[{"parameters":{"content":"\n## CONSULTA TICKET","height":1440,"width":3264},"type":"n8n-nodes-base.stickyNote","position":[2640,960],"typeVersion":1,"id":"1caf941a-e616-47c1-887e-9bee1722b110","name":"Sticky Note1"},{"parameters":{"jsCode":"return [{\n  json: JSON.parse($input.first().json.content)\n}]\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2944,1792],"id":"5e48d529-a598-439c-9ab6-f9a338a73c59","name":"Parse Reading","notesInFlow":false},{"parameters":{"jsCode":"\nconst item = $input.first().json;\nconst current = Number($('ParseSuccessResponse').first().json.originaldata.retryCount ?? $('Send WS Query Ticket').first().json.result.retryCount);\nconst next = Math.max(current - 1, 0);\n\nitem.originaldata = item.originaldata || {};\nitem.originaldata.retryCount = next;\n\n// (Opcional) si quieres “acarrear” secondsToRetry desde la última respuesta:\nif (item.response?.result?.secondsToRetry != null) {\n  item.originaldata.secondsToRetry = Number(item.response.result.secondsToRetry);\n}\n\nreturn [{ json: item }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4064,1936],"id":"800b4ffa-140a-48c7-b20e-a6fda38ed8a6","name":"Update Count Retry"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"2e9c24c4-5c3f-4426-bd89-e2b22123ebe8","leftValue":"={{ $json.originaldata.retryCount }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[4288,1936],"id":"cb48e94f-5f2a-43e0-a6ab-d7ffd6fe5c3c","name":"Validate Retries"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('ParseSuccessResponse').item.json.response.status }}","rightValue":"SUCCESS","operator":{"type":"string","operation":"equals"},"id":"6f59abc1-c070-4d53-8868-a7966791fe44"}],"combinator":"and"},"renameOutput":true,"outputKey":"SUCCESS"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"ed496190-4e85-49cd-8ceb-305d07d380ec","leftValue":"={{ $('ParseSuccessResponse').item.json.response.status }}","rightValue":"WARNING","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"WARNING"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"3d626c03-1e22-438c-83c7-d0879c949812","leftValue":"={{ $('ParseSuccessResponse').item.json.response.status }}","rightValue":"ERROR","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"ERROR"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[3840,1488],"id":"d47d5c6a-aa84-4029-a370-5fec185beece","name":"Validation Reponse"},{"parameters":{"method":"POST","url":"http://10.208.101.92:1801/api/CRUD/sendEmail","sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"email\": \"dpwc.docyprocesosaduaneros@dpworld.com;franklin.milla@dpworld.com;manuel.cuya@dpworld.com\",\n    \"subject\": \"Transmisión automática RM - Error Consulta TICKET - DAM:{{ $('ParseSuccessResponse').item.json.originaldata.Year }}-{{ $('ParseSuccessResponse').item.json.originaldata.Regime }}-{{ $('ParseSuccessResponse').item.json.originaldata.Dam }}\",\n    \"body\": \"<html><body><p>Estimados,</p><p>La siguiente solicitud de exportación: {{ $('ParseSuccessResponse').item.json.originaldata.RequestExportId }}<b></b>, con DAM: {{ $('ParseSuccessResponse').item.json.originaldata.Year }}-{{ $('ParseSuccessResponse').item.json.originaldata.Regime }}-{{ $('ParseSuccessResponse').item.json.originaldata.Dam }}</p><p>Ha dado error en la Consulta TICKET al <b>superar la cantidad de intentos</b> por lo siguiente:<p><p style='color: red'><b>{{ $('Validation Reponse').item.json.message }}</b><p></br><p>Favor verificar y solucionar el error en el módulo de {{ $('ParseSuccessResponse').item.json.originaldata.TransmissionType === 'RM' ? 'DAM' : 'RD' }}, y luego continuar con la transmisión de forma manual.<p><p>Atte,</p><p>DP World</p></body></html>\"\n}","options":{"allowUnauthorizedCerts":true}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4512,1840],"id":"967a5fdb-da69-4556-893d-7cb508423d41","name":"Send Email Retries"},{"parameters":{"method":"POST","url":"http://10.208.101.92:1801/api/CRUD/sendEmail","sendBody":true,"specifyBody":"json","jsonBody":"={{ \n  JSON.stringify({\n    email: \"dpwc.docyprocesosaduaneros@dpworld.com;franklin.milla@dpworld.com;manuel.cuya@dpworld.com\",\n    subject: \"Transmisión automática $('ParseSuccessResponse').item.json.originaldata.TransmissionType - Error Consulta TICKET - DAM: \" +\n      $('ParseSuccessResponse').item.json.originaldata.Year + \"-\" +\n      $('ParseSuccessResponse').item.json.originaldata.Regime + \"-\" +\n      $('ParseSuccessResponse').item.json.originaldata.Dam,\n    body: `<html><body>\n      <p>Estimados,</p>\n      <p>La siguiente solicitud de exportación: \n      <b>${$('ParseSuccessResponse').item.json.originaldata.RequestExportId}</b>, \n      con DAM: ${$('ParseSuccessResponse').item.json.originaldata.Year}-\n      ${$('ParseSuccessResponse').item.json.originaldata.Regime}-\n      ${$('ParseSuccessResponse').item.json.originaldata.Dam}</p>\n      <p>Ha dado error en la Consulta TICKET por lo siguiente:</p>\n      <p style='color: red'><b>${$json.message || $json.statusResponse.message}</b></p>\n      <p>Favor verificar y solucionar el error en el módulo de $('ParseSuccessResponse').item.json.originaldata.TransmissionType === 'RM' ? 'DAM' : 'RD', \n      y luego continuar con la transmisión de forma manual.</p>\n      <p>Atte,<br>DP World</p>\n    </body></html>`\n  })\n}}\n","options":{"allowUnauthorizedCerts":true}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4512,1648],"id":"32f4235b-7392-41fb-b14a-c811c0d8cd43","name":"Send Email Error"},{"parameters":{"assignments":{"assignments":[{"id":"5abf7038-95d9-43a0-a7bb-038c31c4202d","name":"error.message","value":"={{ $('ParseErrorResponse').item.json.response.message }}","type":"string"},{"id":"68151956-e363-4b07-8706-1257f5f39495","name":"error.stack","value":"={{ $('ParseErrorResponse').item.json.response.stacktrace }}","type":"string"},{"id":"d5d2eb49-2655-4ee8-afe7-e99be5dd3458","name":"node.name","value":"={{ $workflow.name }}","type":"string"},{"id":"1f3de402-3184-49cd-a84c-7249954e1c9a","name":"data.damid","value":"={{ $('ParseErrorResponse').item.json.originaldata.DamId }}","type":"string"},{"id":"04719210-a722-4dbf-abfd-3a747fe655f8","name":"=data.rdid","value":"={{ $('ParseErrorResponse').item.json.originaldata.RdId }}","type":"string"},{"id":"b96561d0-e61e-4126-af56-84301f867e02","name":"data.transmissiontype","value":"={{ $('ParseErrorResponse').item.json.originaldata.TransmissionType }}","type":"string"},{"id":"ecd08711-02a3-4b41-8ec3-11ba22af71cc","name":"data.dam","value":"={{ $('ParseErrorResponse').item.json.originaldata.Dam }}","type":"string"},{"id":"c67ba122-9ad2-4491-99fc-fbdb278d4970","name":"data.year","value":"={{ $('ParseErrorResponse').item.json.originaldata.Year }}","type":"string"},{"id":"dc07e139-54c9-47ad-98b9-423d0ba3bae6","name":"data.regime","value":"={{ $('ParseErrorResponse').item.json.originaldata.Regime }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[4288,2160],"id":"edb4e8fb-9caf-4c31-8aaa-79262629cf29","name":"Parse Error Response"},{"parameters":{"method":"POST","url":"http://10.208.101.92:1801/api/CRUD/sendEmail","sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"email\": \"dpwc.docyprocesosaduaneros@dpworld.com;franklin.milla@dpworld.com;manuel.cuya@dpworld.com\",\n    \"subject\": \"Transmisión automática {{ $json.data.TransmissionType }} - Error Consulta TICKET - DAM:{{ $json.data.year }}-{{ $json.data.regime }}-{{ $json.data.dam }}\",\n    \"body\": \"<html><body><p>Estimados,</p><p>La siguiente solicitud de exportación: <b>{{ $json.data.damid }}</b>, con DAM: {{ $json.data.year }}-{{ $json.data.regime }}-{{ $json.data.dam }}, ha generado el siguiente error: </p><p>{{ $json.error.message }}</p><p>Favor de comunicarse con TI y generar la consulta de ticket de forma manual.</p><p>Atte,</p><p>DP World</p></body></html>\"\n}","options":{"allowUnauthorizedCerts":true}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4512,2160],"id":"08427f5e-03e9-429b-b8dc-351aea9d9876","name":"Send Email Error WorkFlow"},{"parameters":{"amount":"={{ $json.originaldata.secondsToRetry || 30 }}"},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[5184,1984],"id":"44c68c64-b08e-430e-8e42-c3abd136319f","name":"Pause","webhookId":"679674a9-2d13-48d8-a8f5-76fd5ca00fd9"},{"parameters":{"method":"POST","url":"https://sp2dca-apiis1.dpwc.local:5043/api/aw-fast/FastGateway/ReleaseTransmissionAutomatic","sendBody":true,"specifyBody":"json","jsonBody":"={{ $json.originalData }}","options":{"allowUnauthorizedCerts":true}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4960,1648],"id":"3a7f7fb4-1e56-4ae9-a1e0-7f3b174f3b2d","name":"Release Transmission","onError":"continueRegularOutput"},{"parameters":{"assignments":{"assignments":[{"id":"5dedd9df-f31f-440d-80e5-b0e202d7dd78","name":"mailStatus","value":"={{ $json.status }}","type":"string"},{"id":"14800a2c-d48c-4c83-8b09-b659403b963b","name":"originalData","value":"={{ $('Read Queue Query Ticket').item.json.content }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[4800,1648],"id":"1bc6929b-e19d-4559-a8a8-aa30c337d31f","name":"Parse Email Response"},{"parameters":{"queue":"queue_query_ticket","options":{"acknowledge":"laterMessageNode"}},"type":"n8n-nodes-base.rabbitmqTrigger","typeVersion":1,"position":[2720,1792],"id":"28f98417-a1e5-4f49-92a3-38814ddd73b3","name":"Read Queue Query Ticket","credentials":{"rabbitmq":{"id":"vsvI9Lg7vTP32Drt","name":"RabbitMQ account"}}},{"parameters":{"method":"POST","url":"https://sp2dca-apiis1.dpwc.local:5043/api/aw-fast/FastGateway/ConsultTICKET","authentication":"genericCredentialType","genericAuthType":"httpBasicAuth","sendBody":true,"specifyBody":"json","jsonBody":"={\n   \"RequestExportId\":{{ $json.RequestExportId }},\n   \"DamId\":{{ $json.DamId }},\n   \"RdId\": {{ $json.RdId }},\n   \"TransmissionType\":\"{{ $json.TransmissionType }}\",\n   \"Dam\":\"{{ $json.Dam }}\",\n   \"Regime\":\"{{ $json.Regime }}\",\n   \"Year\":\"{{ $json.Year }}\",\n   \"TopologyId\":{{ $json.TopologyId }},\n   \"User\":\"send_json_to_n8n_dev\",\n   \"Password\":\"Dport!2025!:::\"\n}","options":{"allowUnauthorizedCerts":true}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[3168,1792],"id":"05821362-d3f4-475e-99a1-ce76f0ea775d","name":"Send WS Query Ticket","credentials":{"httpBasicAuth":{"id":"AcT919njxjFmHrNy","name":"send_sunat_queues"}},"onError":"continueErrorOutput"},{"parameters":{"queue":"queue_query_ticket","sendInputData":false,"message":"={{\n  JSON.stringify({\n    ...$('ParseSuccessResponse').item.json.originaldata,\n    retryCount: $('Update Count Retry').item.json.originaldata.retryCount\n  })\n}}","options":{}},"type":"n8n-nodes-base.rabbitmq","typeVersion":1.1,"position":[5408,1984],"id":"6da11e2c-26a4-462f-98e2-eb185a44254f","name":"Re Send Queue Query Ticket","credentials":{"rabbitmq":{"id":"vsvI9Lg7vTP32Drt","name":"RabbitMQ account"}}},{"parameters":{"queue":"queue_query_channel","sendInputData":false,"message":"={{ JSON.stringify($('ParseSuccessResponse').item.json.originaldata) }}","options":{}},"type":"n8n-nodes-base.rabbitmq","typeVersion":1.1,"position":[5408,1088],"id":"057e3e57-df6a-4515-97e6-e4a544322d4e","name":"Send New Queue Query Channel","credentials":{"rabbitmq":{"id":"vsvI9Lg7vTP32Drt","name":"RabbitMQ account"}}},{"parameters":{"operation":"deleteMessage"},"type":"n8n-nodes-base.rabbitmq","typeVersion":1.1,"position":[5632,1568],"id":"bd01a5d1-5294-4794-9f3b-28b975865403","name":"Delete Queue Query Ticket","credentials":{"rabbitmq":{"id":"vsvI9Lg7vTP32Drt","name":"RabbitMQ account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c64bc5a3-f294-4d51-8475-e735e93362a4","leftValue":"={{ $('ParseSuccessResponse').item.json.originaldata.TransmissionType }}","rightValue":"RM","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[4624,1008],"id":"57e89ca7-f8c0-447c-adda-ef927a1a1a5c","name":"Validate Transmission Type"},{"parameters":{"amount":20},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[5184,1088],"id":"39234f4e-de82-4f0d-b3b6-c0e3d30773fc","name":"Wait","webhookId":"89a06c7a-9e17-42f7-9f21-08f6e75be11b"},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"response\": {{ $json.statusResponse }},\n  \"originaldata\": {\n    \"RequestExportId\": {{ $('Parse Reading').item.json.RequestExportId || null }},\n    \"DamId\": {{ $('Parse Reading').item.json.DamId || null }},\n    \"RdId\": {{ $('Parse Reading').item.json.RdId || 0 }},\n    \"TransmissionType\": \"{{ $('Parse Reading').item.json.TransmissionType || '' }}\",\n    \"Dam\": \"{{ $('Parse Reading').item.json.Dam || '' }}\",\n    \"Regime\": \"{{ $('Parse Reading').item.json.Regime || '' }}\",\n    \"Year\": \"{{ $('Parse Reading').item.json.Year || '' }}\",\n    \"User\": \"{{ $('Parse Reading').item.json.User || '' }}\",\n    \"Password\": \"{{ $('Parse Reading').item.json.Password || '' }}\",\n    \"TopologyId\": {{ $('Parse Reading').item.json.TopologyId || null }},\n    \"retryCount\": {{ $('Parse Reading').item.json.retryCount || 3 }},\n    \"secondsToRetry\": {{ $json.result?.secondsToRetry || 30 }}\n  }\n}\n","includeOtherFields":"=","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3392,1504],"id":"aaca515a-98ca-4937-8610-0ac9de94ef4f","name":"ParseSuccessResponse"},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"log_n8n","mode":"list","cachedResultName":"log_n8n"},"dataMode":"defineBelow","valuesToSend":{"values":[{"column":"message","value":"={{ $json.response.message }}"},{"column":"stacktrace","value":"={{ $json.response.key }}"},{"column":"node","value":"Send WS Query Ticket"},{"column":"request","value":"={{ $json.originaldata }}"},{"column":"response","value":"={{ $json.response }}"},{"column":"recordid","value":"={{ $json.originaldata.RequestExportId }}"},{"column":"key","value":"={{ $json.response.key }}"},{"column":"status","value":"={{ $json.response.status }}"},{"column":"flow","value":"={{ $workflow.name }}"}]},"options":{}},"name":"InsertSuccessLog","type":"n8n-nodes-base.postgres","typeVersion":2,"position":[3616,1504],"id":"e88775c9-fb20-41db-9ffe-9939fb0fd121","credentials":{"postgres":{"id":"d53NEEOjDqHRzRm6","name":"Postgres account 2"}}},{"parameters":{"mode":"raw","jsonOutput":"={{\n  {\n    response: {\n       status: \"ERROR\",\n       message: $json.error?.message ?? $json.message ?? 'Error desconocido',\n      stacktrace: $json.error?.stack ?? '',\n       \"key\": 8000},\n    originaldata: {\n      RequestExportId: $('Parse Reading').item.json.RequestExportId ?? null,\n      DamId: $('Parse Reading').item.json.DamId ?? null,\n      RdId: $('Parse Reading').item.json.RdId ?? 0,\n      TransmissionType: $('Parse Reading').item.json.TransmissionType ?? '',\n      Dam: $('Parse Reading').item.json.Dam ?? '',\n      Regime: $('Parse Reading').item.json.Regime ?? '',\n      Year: $('Parse Reading').item.json.Year ?? '',\n      User: $('Parse Reading').item.json.User ?? '',\n      Password: $('Parse Reading').item.json.Password ?? '',\n      TopologyId: $('Parse Reading').item.json.TopologyId ?? null,\n      retryCount: $('Parse Reading').item.json.retryCount ?? 3,\n      secondsToRetry: $json.result?.secondsToRetry ?? 30,\n    }\n    \n  }\n}}","includeOtherFields":"=","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3840,2160],"id":"2b0d72cf-b29b-406d-ad48-1649ae90a514","name":"ParseErrorResponse"},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"mode":"list","value":"log_n8n"},"dataMode":"defineBelow","valuesToSend":{"values":[{"column":"node","value":"Send WS Query Ticket"},{"column":"recordid","value":"={{ $json.originaldata.RequestExportId }}"},{"column":"request","value":"={{ $json.originaldata }}"},{"column":"response","value":"={{ $('Send WS Query Ticket').item.json.error }}"},{"column":"status","value":"={{ $('Send WS Query Ticket').item.json.error.name }}"},{"column":"message","value":"={{ $('Send WS Query Ticket').item.json.error.message }}"},{"column":"key","value":"8000"},{"column":"stacktrace","value":"={{ $('Send WS Query Ticket').item.json.error.stack }}"},{"column":"flow","value":"={{ $workflow.name }}"}]},"options":{}},"name":"InsertErrorLog","type":"n8n-nodes-base.postgres","typeVersion":2,"position":[4064,2160],"id":"b82cd105-18ae-4c98-adcc-760f9edec4cd","credentials":{"postgres":{"id":"d53NEEOjDqHRzRm6","name":"Postgres account 2"}}},{"parameters":{"mode":"raw","jsonOutput":"={{\n{\n  response: {\n    status: $json.statusResponse?.status || $json.error?.name,\n    message: $json.statusResponse?.message || $json.error?.message,\n    stacktrace: $json.error?.stack || '',\n    key: $json.statusResponse?.key || 8000\n  },\n  originaldata: {\n    RequestExportId: $node[\"Parse Reading\"].json.RequestExportId || null,\n    DamId: $node[\"Parse Reading\"].json.DamId || null,\n    RdId: $node[\"Parse Reading\"].json.RdId || 0,\n    TransmissionType: $node[\"Parse Reading\"].json.TransmissionType || '',\n    Dam: $node[\"Parse Reading\"].json.Dam || '',\n    Regime: $node[\"Parse Reading\"].json.Regime || '',\n    Year: $node[\"Parse Reading\"].json.Year || '',\n    User: $node[\"Parse Reading\"].json.User || '',\n    Password: $node[\"Parse Reading\"].json.Password || '',\n    TopologyId: $node[\"Parse Reading\"].json.TopologyId || null,\n    retryCount: $node[\"Parse Reading\"].json.retryCount || 3,\n    secondsToRetry: $json.result?.secondsToRetry || 30\n  }\n}\n}}\n","includeOtherFields":"=","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[5184,1648],"id":"72a793c2-6173-4a3c-aad6-9a88d8dbf958","name":"ParseResponse"},{"parameters":{"schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"log_n8n","mode":"list","cachedResultName":"log_n8n"},"dataMode":"defineBelow","valuesToSend":{"values":[{"column":"message","value":"={{ $json.response.message }}"},{"column":"stacktrace","value":"={{ $json.response.stacktrace }}"},{"column":"node","value":"Release Transmission"},{"column":"request","value":"={{ $json.originaldata }}"},{"column":"response","value":"={{ $json.response }}"},{"column":"recordid","value":"={{ $json.originaldata.RequestExportId }}"},{"column":"key","value":"={{ $json.response.key }}"},{"column":"status","value":"={{ $json.response.status }}"},{"column":"flow","value":"={{ $workflow.name }}"}]},"options":{}},"name":"InsertLog","type":"n8n-nodes-base.postgres","typeVersion":2,"position":[5408,1648],"id":"2f03c0e9-c07d-4a17-8cad-a1ee0c9f7e22","credentials":{"postgres":{"id":"d53NEEOjDqHRzRm6","name":"Postgres account 2"}}},{"parameters":{"method":"POST","url":"https://sp2dca-apiis1.dpwc.local:5043/api/aw-fast/FastGateway/DisapproveRequestExport","sendBody":true,"specifyBody":"json","jsonBody":"={{ \n  JSON.stringify({\n    RequestExportId: $('Parse Reading').item.json.RequestExportId,\n    DamId: $('Parse Reading').item.json.DamId,\n    RdId: $('Parse Reading').item.json.RdId,\n    TransmissionType: $('Parse Reading').item.json.TransmissionType,\n    Dam: $('Parse Reading').item.json.Dam,\n    Regime: $('Parse Reading').item.json.Regime,\n    Year: $('Parse Reading').item.json.Year,\n    TopologyId: $('Parse Reading').item.json.TopologyId,\n    User: $('Parse Reading').item.json.User,\n    Password: $('Parse Reading').item.json.Password,\n    Motive: $json.message\n  })\n}}\n","options":{"allowUnauthorizedCerts":true}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4464,1248],"id":"3b1e22fd-50de-4f7f-a2ed-97ab9038f9d9","name":"Disaprove Export Request","onError":"continueErrorOutput"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.key }}","rightValue":304,"operator":{"type":"number","operation":"equals"},"id":"b1483312-6a2f-43a0-a270-3f88c8120ccc"}],"combinator":"and"},"renameOutput":true,"outputKey":"304"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"2e2e0eea-1cf1-49c5-b454-c19803073b14","leftValue":"={{ $json.key }}","rightValue":305,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"305"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0f5199ff-0b1a-441d-a6ba-1363a80a9efc","leftValue":"={{ $json.key }}","rightValue":306,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"306"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c5470d8b-703b-445b-931e-eeb00ef90463","leftValue":"={{ $json.key }}","rightValue":307,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"307"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4c22d8b0-9e44-413e-ac13-5f5b2cf44f70","leftValue":"={{ $json.key }}","rightValue":308,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"308"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"acc23a56-08f6-4c12-9ad2-1c1a11b5ed1d","leftValue":"={{ $json.key }}","rightValue":309,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"309"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f09d6b18-acf1-432e-bd5e-e8b2e3b286d7","leftValue":"={{ $json.key }}","rightValue":314,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"314"}]},"options":{"fallbackOutput":"extra","renameFallbackOutput":"OTROS"}},"type":"n8n-nodes-base.switch","typeVersion":3.3,"position":[4064,1408],"id":"4f26c845-257c-4fbb-ae9a-b3e3a403cf93","name":"ValidateError"},{"parameters":{"method":"POST","url":"http://10.208.101.92:1801/api/CRUD/sendEmail","sendBody":true,"specifyBody":"json","jsonBody":"={{ \n  JSON.stringify({\n    email: \"dpwc.docyprocesosaduaneros@dpworld.com;franklin.milla@dpworld.com;manuel.cuya@dpworld.com\",\n    subject: \"Transmisión automática $('ParseSuccessResponse').item.json.originaldata.TransmissionType - Error al Rechazar Solicitud - DAM: \" +\n      $('ParseSuccessResponse').item.json.originaldata.Year + \"-\" +\n      $('ParseSuccessResponse').item.json.originaldata.Regime + \"-\" +\n      $('ParseSuccessResponse').item.json.originaldata.Dam,\n    body: `<html><body>\n      <p>Estimados,</p>\n      <p>La siguiente solicitud de exportación: \n      <b>${$('ParseSuccessResponse').item.json.originaldata.RequestExportId}</b>, \n      con DAM: ${$('ParseSuccessResponse').item.json.originaldata.Year}-\n      ${$('ParseSuccessResponse').item.json.originaldata.Regime}-\n      ${$('ParseSuccessResponse').item.json.originaldata.Dam}</p>\n      <p>Ha dado error en al querer rechazar la soclcitud en automático(por errores SUNAT) por lo siguiente:</p>\n      <p style='color: red'><b>${$json.message || $json.statusResponse.message}</b></p>\n      <p>Favor rechazar la solcicitud en Dport de forma manual.</p>\n      <p>Atte,<br>DP World</p>\n    </body></html>`\n  })\n}}\n","options":{"allowUnauthorizedCerts":true}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4480,1488],"id":"3636cfe4-cad4-4bfa-ad38-4b4cd182de7b","name":"Send Email Disaprove"}],"connections":{"Parse Reading":{"main":[[{"node":"Send WS Query Ticket","type":"main","index":0}]]},"Update Count Retry":{"main":[[{"node":"Validate Retries","type":"main","index":0}]]},"Validate Retries":{"main":[[{"node":"Send Email Retries","type":"main","index":0}],[{"node":"Pause","type":"main","index":0}]]},"Validation Reponse":{"main":[[{"node":"Validate Transmission Type","type":"main","index":0}],[{"node":"Update Count Retry","type":"main","index":0}],[{"node":"ValidateError","type":"main","index":0}]]},"Send Email Retries":{"main":[[{"node":"Parse Email Response","type":"main","index":0}]]},"Send Email Error":{"main":[[{"node":"Parse Email Response","type":"main","index":0}]]},"Parse Error Response":{"main":[[{"node":"Send Email Error WorkFlow","type":"main","index":0}]]},"Send Email Error WorkFlow":{"main":[[{"node":"Parse Email Response","type":"main","index":0}]]},"Pause":{"main":[[{"node":"Re Send Queue Query Ticket","type":"main","index":0}]]},"Release Transmission":{"main":[[{"node":"ParseResponse","type":"main","index":0}]]},"Parse Email Response":{"main":[[{"node":"Release Transmission","type":"main","index":0}]]},"Read Queue Query Ticket":{"main":[[{"node":"Parse Reading","type":"main","index":0}]]},"Send WS Query Ticket":{"main":[[{"node":"ParseSuccessResponse","type":"main","index":0}],[{"node":"ParseErrorResponse","type":"main","index":0}]]},"Re Send Queue Query Ticket":{"main":[[{"node":"Delete Queue Query Ticket","type":"main","index":0}]]},"Send New Queue Query Channel":{"main":[[{"node":"Delete Queue Query Ticket","type":"main","index":0}]]},"Validate Transmission Type":{"main":[[{"node":"Wait","type":"main","index":0}],[{"node":"Delete Queue Query Ticket","type":"main","index":0}]]},"Wait":{"main":[[{"node":"Send New Queue Query Channel","type":"main","index":0}]]},"ParseSuccessResponse":{"main":[[{"node":"InsertSuccessLog","type":"main","index":0}]]},"InsertSuccessLog":{"main":[[{"node":"Validation Reponse","type":"main","index":0}]]},"ParseErrorResponse":{"main":[[{"node":"InsertErrorLog","type":"main","index":0}]]},"InsertErrorLog":{"main":[[{"node":"Parse Error Response","type":"main","index":0}]]},"ParseResponse":{"main":[[{"node":"InsertLog","type":"main","index":0}]]},"InsertLog":{"main":[[{"node":"Delete Queue Query Ticket","type":"main","index":0}]]},"Disaprove Export Request":{"main":[[{"node":"Parse Email Response","type":"main","index":0}],[{"node":"Send Email Disaprove","type":"main","index":0}]]},"ValidateError":{"main":[[{"node":"Disaprove Export Request","type":"main","index":0}],[{"node":"Disaprove Export Request","type":"main","index":0}],[{"node":"Disaprove Export Request","type":"main","index":0}],[{"node":"Disaprove Export Request","type":"main","index":0}],[{"node":"Disaprove Export Request","type":"main","index":0}],[{"node":"Disaprove Export Request","type":"main","index":0}],[{"node":"Disaprove Export Request","type":"main","index":0}],[{"node":"Send Email Error","type":"main","index":0}]]},"Send Email Disaprove":{"main":[[{"node":"Parse Email Response","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"KVW9hshItNEvzyI4"},"staticData":null,"meta":null,"pinData":{},"versionId":"adf498d3-d06d-4ef2-9dee-a0b8fa33c99f","triggerCount":1,"shared":[{"createdAt":"2025-09-26T18:09:28.275Z","updatedAt":"2025-09-26T18:09:28.275Z","role":"workflow:owner","workflowId":"mvEjeTAx0ZSKvJfv","projectId":"qKHJHnveidvROPB6"}],"tags":[{"createdAt":"2025-09-23T20:55:21.169Z","updatedAt":"2025-09-25T20:25:47.066Z","id":"AqVIfFmictF9YGtn","name":"GDC-2490"}]}